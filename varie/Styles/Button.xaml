<ResourceDictionary 
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:local="clr-namespace:cgm.AIS.Windows.Controls.Views">

    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="1" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="MetroButton" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="#FF003366"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="10 5"/>
        <Setter Property="FontSize" Value="12" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontFamily" Value="/cgm.AIS.Windows.Controls;component/Resources/Roboto/#Roboto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border
                                x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />

                        <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="OpacityMask" Value="#AA003366"/>
                            <!--<Setter Property="Background" Value="#FF003366"/>
                            <Setter Property="Foreground" Value="White"/>-->
                            <Setter Property="Margin" Value="2 1" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="Background" Value="#FF0062A8"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="#FFB2B2B2"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MetroButtonColorWin7" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="#007C7C7C"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="10 5"/>
        <Setter Property="FontSize" Value="12" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontFamily" Value="/cgm.AIS.Windows.Controls;component/Resources/Roboto/#Roboto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border
                                x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />

                        <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsPressed" Value="True">
                            <Setter Property="OpacityMask" Value="#007C7C7C"/>
                            --><!--<Setter Property="Background" Value="#FF003366"/>
                            <Setter Property="Foreground" Value="White"/>--><!--
                            <Setter Property="Margin" Value="2 1" />
                        </Trigger>-->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="Background" Value="#007C7C7C"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="#007C7C7C"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="Button">
        <Setter Property="FontFamily" Value="Tahoma" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="Cursor" Value="Hand" />
    </Style>


    <ControlTemplate TargetType="{x:Type ToggleButton}" x:Key="ComboBoxToggleButtonTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="25" />
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="2" Name="Border"
                            BorderBrush="{StaticResource ComboBoxNormalBorderBrush}" 
                            CornerRadius="0" BorderThickness="1, 1, 1, 1" 
                            Background="{StaticResource ComboBoxNormalBackgroundBrush}" />
            <Border Grid.Column="1" Margin="1, 1, 1, 1" BorderBrush="#444" 
                                      Name="ButtonBorder"
                                      CornerRadius="0, 0, 0, 0" BorderThickness="0, 0, 0, 0"
                                      Background="{StaticResource ToggleButtonBackgroundBrush}" />

            <Path Name="Arrow" Grid.Column="1" 
                          Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                          HorizontalAlignment="Center" Fill="White"
                          VerticalAlignment="Center" />

        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource ToggleButtonBackgroundBrushOver}"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource ToggleButtonBackgroundBrushPressed}"/>
                <Setter Property="Shape.Fill" TargetName="Arrow" Value="#FF8D979E"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                <Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBorderBrush}"/>
                <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                <Setter Property="Shape.Fill" TargetName="Arrow" Value="#999"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


</ResourceDictionary>